#include <Servo.h>
#include <SimpleTimer.h>

int servoPin = 9; //Servo attached to in 9
int mousePos = 100; // set the limit of mouse move (20 was plenty for me)

//Comment out the following 2 lines if you only need a repeating 30 second timer
#define MinimumTime 5 //Minimum time (in seconds) between mouse movements
#define MaximumTime 10 //Maximum time (in seconds) between mouse movements

Servo servo;
int angle = 0; // servo position in degrees

SimpleTimer timer(30000L); //This is how to decalre a 30 second timer with the version of SimpleTimer used

//Uncomment this if you want debug messages sent to the Serial Monitor
//#define DebugInfo

void setup()
{
#ifdef DebugInfo
Serial.begin(115200);
Serial.println("Serial output enabled.");
#endif

servo.attach(servoPin); //Attach the servo
servo.write(0); // Set Servo to 0 degrees
delay(15);

#ifdef DebugInfo
Serial.println("Servo set to 0 degrees.");
#endif

servo.detach(); //Detaching when not in use seems to prevent servo chatter/buzzing

randomSeed(analogRead(0)); //Get as close ro a random number as easily possible
}

void loop()
{
if (timer.isReady()) //Check if Simple Timer has reached it's trigger time
{
//Mouse Move
servo.attach(servoPin);

#ifdef DebugInfo
if (servo.attached())
{
Serial.println("Servo attached.");
}
else
{
Serial.println("Servo failed to attach.");
}
#endif

// scan from 0 to mousePos degrees
for(angle = 0; angle <= mousePos; angle++)
{
servo.write(angle);
delay(15);
}
// now scan back from mousePos to 0 degrees
for(angle = mousePos; angle >= 0; angle--)
{
servo.write(angle);
delay(15);
}

#ifdef DebugInfo
Serial.println("Servo move complete.");
#endif

servo.detach();

#ifdef DebugInfo
if (!servo.attached())
{
Serial.println("Servo detached.");
}
else
{
Serial.println("Servo failed to detach.");
}
#endif

#ifdef MinimumTime //only use random time if Min and Max are defined
#ifdef MaximumTime
#ifdef DebugInfo
long RandomTime = random(MinimumTime, MaximumTime);
timer.setInterval((RandomTime*1000));
Serial.print("Next Activation: "); Serial.print(RandomTime);Serial.println(" seconds.");
#else
timer.setInterval((random(MinimumTime, MaximumTime)*1000));
#endif
#endif
#else
#ifdef DebugInfo
Serial.println("30 second timer used.");
#endif
#endif

timer.reset(); //Restart the timer
}
}
